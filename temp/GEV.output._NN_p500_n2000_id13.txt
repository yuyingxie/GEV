
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # TODO: Add comment
> # 
> # Author: xyy
> ###############################################################################
> library(PMA)
Loading required package: impute
> library(MASS)
> library(RSpectra)
> source("GEV.R")
> 
> args=(commandArgs(TRUE))
> 
> ##args is now a list of character vectors
> ## First check to see if arguments are passed.
> ## Then cycle through each element of the list and evaluate the expressions.
> if(length(args)==0){
+     case.id = 1  
+ }else{
+     for(i in 1:length(args)){
+         eval(parse(text=args[[i]]))
+     }
+ }
> 
> load(paste("Data/", Type, "_p", p, "_n_", n, "_id", case.id, ".Rdata", sep = ""))
> 
> Sig_est = Ome_est = matrix(0, 2 * p, 2 * p)
> 
> Ome_est[1:p, (p + 1): (2 * p)] = t(dat$X) %*% dat$Y / n
> Ome_est[ (p + 1): (2 * p), 1:p] = t(dat$Y) %*% dat$X /n
> Sig_est[1:p, 1:p] = t(dat$X) %*% dat$X /n
> Sig_est[(p + 1): (2 * p), (p + 1): (2 * p)] = t(dat$Y) %*% dat$Y / n
> 
> perm.out <- CCA.permute(x = dat$X, z = dat$Y, typex="standard", standardize = FALSE,
+         typez = "standard", nperms = 10, penaltyxs = seq(.02, .9, len = 10))

 Permutation  1  out of  10  12345678910
 Permutation  2  out of  10  12345678910
 Permutation  3  out of  10  12345678910
 Permutation  4  out of  10  12345678910
 Permutation  5  out of  10  12345678910
 Permutation  6  out of  10  12345678910
 Permutation  7  out of  10  12345678910
 Permutation  8  out of  10  12345678910
 Permutation  9  out of  10  12345678910
 Permutation  10  out of  10  12345678910
> W1 = CCA(x = dat$X, z = dat$Y,  penaltyx = perm.out$bestpenaltyx, standardize = FALSE,
+         v = perm.out$v.init, penaltyz = perm.out$bestpenaltyz, K = 2)
123456789101112
1234567
> 
> U_est = Re(Get_U(Ome_est, 2))
> res = CCACV(dat$X, dat$Y, fold = 5, lambdax =seq(0.001, 0.2, length =20), 
+         lambday =seq(0.001, 0.2, length = 20), k = 2)
[2]dif=0.47202; Loss=-0.5605176
[3]dif=0.20621; Loss=-0.8147422
[4]dif=0.14686; Loss=-0.8824135
[5]dif=0.10045; Loss=-0.9035706
[6]dif=0.07727; Loss=-0.9143023
[7]dif=0.06779; Loss=-0.9224715
[8]dif=0.0626; Loss=-0.9294226
[9]dif=0.05868; Loss=-0.9352921
[10]dif=0.05492; Loss=-0.9401183
[11]dif=0.05093; Loss=-0.9439696
[12]dif=0.04674; Loss=-0.9469483
[13]dif=0.04256; Loss=-0.9491964
[14]dif=0.03851; Loss=-0.9508679
[15]dif=0.0346; Loss=-0.952085
[16]dif=0.03082; Loss=-0.9529517
[17]dif=0.02731; Loss=-0.9535586
[18]dif=0.02401; Loss=-0.9539734
[19]dif=0.02092; Loss=-0.954242
[20]dif=0.01807; Loss=-0.9544093
[21]dif=0.01557; Loss=-0.9545124
[22]dif=0.01339; Loss=-0.9545739
[23]dif=0.01152; Loss=-0.9546084
[24]dif=0.00992; Loss=-0.9546294
[25]dif=0.00861; Loss=-0.9546433
[26]dif=0.00754; Loss=-0.9546574
[27]dif=0.00673; Loss=-0.9546731
[28]dif=0.00612; Loss=-0.9546909
[29]dif=0.00569; Loss=-0.9547107
[30]dif=0.00542; Loss=-0.9547317
[31]dif=0.00521; Loss=-0.954753
[32]dif=0.00505; Loss=-0.9547738
[33]dif=0.00493; Loss=-0.9547934
[34]dif=0.00477; Loss=-0.9548112
[35]dif=0.00459; Loss=-0.9548271
[36]dif=0.0044; Loss=-0.9548407
[37]dif=0.0042; Loss=-0.9548521
[38]dif=0.004; Loss=-0.9548614
[39]dif=0.00379; Loss=-0.9548689
[40]dif=0.00357; Loss=-0.9548748
[41]dif=0.00336; Loss=-0.9548796
[42]dif=0.00315; Loss=-0.9548836
[43]dif=0.00293; Loss=-0.954887
[44]dif=0.00275; Loss=-0.9548898
[45]dif=0.00258; Loss=-0.9548923
[46]dif=0.00243; Loss=-0.9548945
[47]dif=0.0023; Loss=-0.9548964
[48]dif=0.0022; Loss=-0.9548981
[49]dif=0.0021; Loss=-0.9548997
[50]dif=0.00199; Loss=-0.9549011
[51]dif=0.0019; Loss=-0.9549023
[52]dif=0.00181; Loss=-0.9549035
[53]dif=0.00174; Loss=-0.9549045
[54]dif=0.00166; Loss=-0.9549054
[55]dif=0.00158; Loss=-0.9549063
[56]dif=0.00151; Loss=-0.9549071
[57]dif=0.00144; Loss=-0.9549079
[58]dif=0.00137; Loss=-0.9549087
[59]dif=0.00132; Loss=-0.9549095
[60]dif=0.00127; Loss=-0.9549103
[61]dif=0.00123; Loss=-0.954911
[62]dif=0.00119; Loss=-0.9549117
[63]dif=0.00116; Loss=-0.9549124
[64]dif=0.00112; Loss=-0.9549131
[65]dif=0.00109; Loss=-0.9549137
[66]dif=0.00106; Loss=-0.9549142
[67]dif=0.00102; Loss=-0.9549146
[68]dif=0.00098; Loss=-0.9549149
[69]dif=0.00094; Loss=-0.9549152
[70]dif=9e-04; Loss=-0.9549154
[71]dif=0.00086; Loss=-0.9549156
[72]dif=0.00082; Loss=-0.9549157
[73]dif=0.00078; Loss=-0.9549158
[74]dif=0.00075; Loss=-0.9549159
[75]dif=0.00071; Loss=-0.954916
[76]dif=0.00068; Loss=-0.954916
[77]dif=0.00065; Loss=-0.9549161
[78]dif=0.00063; Loss=-0.9549162
[79]dif=0.00061; Loss=-0.9549164
[80]dif=6e-04; Loss=-0.9549165
[81]dif=0.00058; Loss=-0.9549166
[82]dif=0.00057; Loss=-0.9549167
[83]dif=0.00056; Loss=-0.9549169
[84]dif=0.00055; Loss=-0.954917
[85]dif=0.00054; Loss=-0.9549171
[86]dif=0.00052; Loss=-0.9549172
[87]dif=5e-04; Loss=-0.9549173
[88]dif=0.00049; Loss=-0.9549174
[89]dif=0.00047; Loss=-0.9549175
[90]dif=0.00046; Loss=-0.9549175
[91]dif=0.00044; Loss=-0.9549176
[92]dif=0.00043; Loss=-0.9549177
[93]dif=0.00041; Loss=-0.9549177
[94]dif=4e-04; Loss=-0.9549178
[95]dif=0.00039; Loss=-0.9549178
[96]dif=0.00038; Loss=-0.9549179
[97]dif=0.00036; Loss=-0.9549179
[98]dif=0.00036; Loss=-0.9549179
[99]dif=0.00035; Loss=-0.954918
[100]dif=0.00034; Loss=-0.954918
[101]dif=0.00033; Loss=-0.954918
[102]dif=0.00033; Loss=-0.9549181
[103]dif=0.00032; Loss=-0.9549181
[104]dif=0.00031; Loss=-0.9549181
[105]dif=3e-04; Loss=-0.9549181
[106]dif=0.00029; Loss=-0.9549181
[107]dif=0.00028; Loss=-0.9549181
[108]dif=0.00027; Loss=-0.9549182
[109]dif=0.00026; Loss=-0.9549182
[110]dif=0.00025; Loss=-0.9549182
[111]dif=0.00024; Loss=-0.9549182
[112]dif=0.00023; Loss=-0.9549182
[113]dif=0.00023; Loss=-0.9549182
[114]dif=0.00022; Loss=-0.9549182
[115]dif=0.00021; Loss=-0.9549182
[116]dif=0.00021; Loss=-0.9549183
[117]dif=0.00021; Loss=-0.9549183
[118]dif=2e-04; Loss=-0.9549183
[119]dif=2e-04; Loss=-0.9549183
[120]dif=2e-04; Loss=-0.9549183
[121]dif=0.00019; Loss=-0.9549183
[122]dif=0.00019; Loss=-0.9549183
[123]dif=0.00019; Loss=-0.9549184
[124]dif=0.00019; Loss=-0.9549184
[125]dif=0.00018; Loss=-0.9549184
[126]dif=0.00018; Loss=-0.9549184
[127]dif=0.00017; Loss=-0.9549184
[128]dif=0.00016; Loss=-0.9549184
[129]dif=0.00016; Loss=-0.9549184
[130]dif=0.00015; Loss=-0.9549184
[131]dif=0.00015; Loss=-0.9549184
[132]dif=0.00014; Loss=-0.9549184
[133]dif=0.00014; Loss=-0.9549184
[134]dif=0.00014; Loss=-0.9549184
[135]dif=0.00013; Loss=-0.9549184
[136]dif=0.00013; Loss=-0.9549184
[137]dif=0.00013; Loss=-0.9549184
[138]dif=0.00013; Loss=-0.9549184
[139]dif=0.00013; Loss=-0.9549185
[140]dif=0.00012; Loss=-0.9549185
[141]dif=0.00012; Loss=-0.9549185
[142]dif=0.00012; Loss=-0.9549185
[143]dif=0.00011; Loss=-0.9549185
[144]dif=0.00011; Loss=-0.9549185
[145]dif=0.00011; Loss=-0.9549185
[146]dif=1e-04; Loss=-0.9549185
[147]dif=1e-04; Loss=-0.9549185
[148]dif=1e-04; Loss=-0.9549185
[149]dif=9e-05; Loss=-0.9549185
[150]dif=9e-05; Loss=-0.9549185
[151]dif=9e-05; Loss=-0.9549185
[152]dif=9e-05; Loss=-0.9549185
[153]dif=8e-05; Loss=-0.9549185
[154]dif=8e-05; Loss=-0.9549185
[155]dif=8e-05; Loss=-0.9549185
[156]dif=8e-05; Loss=-0.9549185
[157]dif=8e-05; Loss=-0.9549185
[158]dif=8e-05; Loss=-0.9549185
[159]dif=8e-05; Loss=-0.9549185
[160]dif=8e-05; Loss=-0.9549185
[161]dif=8e-05; Loss=-0.9549185
[162]dif=8e-05; Loss=-0.9549185
[163]dif=8e-05; Loss=-0.9549185
[164]dif=8e-05; Loss=-0.9549185
[165]dif=7e-05; Loss=-0.9549185
[166]dif=7e-05; Loss=-0.9549185
[167]dif=7e-05; Loss=-0.9549185
[168]dif=6e-05; Loss=-0.9549185
[169]dif=6e-05; Loss=-0.9549185
[170]dif=6e-05; Loss=-0.9549185
[171]dif=6e-05; Loss=-0.9549185
[172]dif=6e-05; Loss=-0.9549185
[173]dif=5e-05; Loss=-0.9549185
[174]dif=5e-05; Loss=-0.9549185
[175]dif=5e-05; Loss=-0.9549185
[176]dif=5e-05; Loss=-0.9549185
[177]dif=5e-05; Loss=-0.9549185
[178]dif=5e-05; Loss=-0.9549185
[179]dif=5e-05; Loss=-0.9549185
[180]dif=5e-05; Loss=-0.9549185
[181]dif=5e-05; Loss=-0.9549185
[182]dif=5e-05; Loss=-0.9549185
[183]dif=5e-05; Loss=-0.9549185
[184]dif=5e-05; Loss=-0.9549185
[185]dif=5e-05; Loss=-0.9549185
[186]dif=5e-05; Loss=-0.9549185
[187]dif=5e-05; Loss=-0.9549185
[188]dif=5e-05; Loss=-0.9549185
[189]dif=5e-05; Loss=-0.9549185
[190]dif=4e-05; Loss=-0.9549185
[191]dif=4e-05; Loss=-0.9549185
[192]dif=4e-05; Loss=-0.9549185
[193]dif=4e-05; Loss=-0.9549185
[194]dif=4e-05; Loss=-0.9549185
[195]dif=4e-05; Loss=-0.9549185
[196]dif=4e-05; Loss=-0.9549185
[197]dif=4e-05; Loss=-0.9549185
[198]dif=4e-05; Loss=-0.9549185
[199]dif=3e-05; Loss=-0.9549185
[200]dif=3e-05; Loss=-0.9549185
[201]dif=3e-05; Loss=-0.9549185
[202]dif=3e-05; Loss=-0.9549185
[203]dif=3e-05; Loss=-0.9549185
[204]dif=3e-05; Loss=-0.9549185
[205]dif=3e-05; Loss=-0.9549185
[206]dif=3e-05; Loss=-0.9549185
[207]dif=3e-05; Loss=-0.9549185
[208]dif=3e-05; Loss=-0.9549185
[209]dif=3e-05; Loss=-0.9549185
[210]dif=3e-05; Loss=-0.9549185
[211]dif=3e-05; Loss=-0.9549185
[212]dif=3e-05; Loss=-0.9549185
[213]dif=3e-05; Loss=-0.9549185
[214]dif=3e-05; Loss=-0.9549185
[215]dif=3e-05; Loss=-0.9549185
[216]dif=3e-05; Loss=-0.9549185
[217]dif=3e-05; Loss=-0.9549185
[218]dif=3e-05; Loss=-0.9549185
[219]dif=3e-05; Loss=-0.9549185
[220]dif=3e-05; Loss=-0.9549185
[221]dif=2e-05; Loss=-0.9549185
[222]dif=2e-05; Loss=-0.9549185
[223]dif=2e-05; Loss=-0.9549185
[224]dif=2e-05; Loss=-0.9549185
[225]dif=2e-05; Loss=-0.9549185
[226]dif=2e-05; Loss=-0.9549185
[227]dif=2e-05; Loss=-0.9549185
[228]dif=2e-05; Loss=-0.9549185
[229]dif=2e-05; Loss=-0.9549185
[230]dif=2e-05; Loss=-0.9549185
[231]dif=2e-05; Loss=-0.9549185
[232]dif=2e-05; Loss=-0.9549185
[233]dif=2e-05; Loss=-0.9549185
[234]dif=2e-05; Loss=-0.9549185
[235]dif=2e-05; Loss=-0.9549185
[236]dif=2e-05; Loss=-0.9549185
[237]dif=2e-05; Loss=-0.9549185
[238]dif=2e-05; Loss=-0.9549185
[239]dif=2e-05; Loss=-0.9549185
[240]dif=2e-05; Loss=-0.9549185
[241]dif=2e-05; Loss=-0.9549185
[242]dif=2e-05; Loss=-0.9549185
[243]dif=2e-05; Loss=-0.9549185
[244]dif=2e-05; Loss=-0.9549185
[245]dif=2e-05; Loss=-0.9549185
[246]dif=1e-05; Loss=-0.9549185
[247]dif=1e-05; Loss=-0.9549185
[248]dif=1e-05; Loss=-0.9549185
[249]dif=1e-05; Loss=-0.9549185
[250]dif=1e-05; Loss=-0.9549185
[251]dif=1e-05; Loss=-0.9549185
[252]dif=1e-05; Loss=-0.9549185
[253]dif=1e-05; Loss=-0.9549185
[254]dif=1e-05; Loss=-0.9549185
[255]dif=1e-05; Loss=-0.9549185
[256]dif=2e-05; Loss=-0.9549185
[257]dif=2e-05; Loss=-0.9549185
[258]dif=2e-05; Loss=-0.9549185
[259]dif=2e-05; Loss=-0.9549185
[260]dif=1e-05; Loss=-0.9549185
[261]dif=1e-05; Loss=-0.9549185
[262]dif=1e-05; Loss=-0.9549185
[263]dif=1e-05; Loss=-0.9549185
[264]dif=1e-05; Loss=-0.9549185
[265]dif=1e-05; Loss=-0.9549185
[266]dif=1e-05; Loss=-0.9549185
[267]dif=1e-05; Loss=-0.9549185
[268]dif=1e-05; Loss=-0.9549185
[269]dif=1e-05; Loss=-0.9549185
[270]dif=1e-05; Loss=-0.9549185
[271]dif=1e-05; Loss=-0.9549185
[272]dif=1e-05; Loss=-0.9549185
[273]dif=1e-05; Loss=-0.9549185
[274]dif=1e-05; Loss=-0.9549185
[275]dif=1e-05; Loss=-0.9549185
[276]dif=1e-05; Loss=-0.9549185
[277]dif=1e-05; Loss=-0.9549185
[278]dif=1e-05; Loss=-0.9549185
[279]dif=1e-05; Loss=-0.9549185
[280]dif=1e-05; Loss=-0.9549185
[281]dif=1e-05; Loss=-0.9549185
[282]dif=1e-05; Loss=-0.9549185
[283]dif=1e-05; Loss=-0.9549185
[284]dif=1e-05; Loss=-0.9549185
[285]dif=1e-05; Loss=-0.9549185
[286]dif=1e-05; Loss=-0.9549185
[287]dif=1e-05; Loss=-0.9549185
[288]dif=1e-05; Loss=-0.9549185
[289]dif=1e-05; Loss=-0.9549185
[290]dif=1e-05; Loss=-0.9549185
[291]dif=1e-05; Loss=-0.9549185
[292]dif=1e-05; Loss=-0.9549185
[293]dif=1e-05; Loss=-0.9549185
[294]dif=1e-05; Loss=-0.9549185
[295]dif=1e-05; Loss=-0.9549185
[296]dif=1e-05; Loss=-0.9549185
[297]dif=1e-05; Loss=-0.9549185
[298]dif=1e-05; Loss=-0.9549185
[299]dif=1e-05; Loss=-0.9549185
[300]dif=1e-05; Loss=-0.9549185
[301]dif=1e-05; Loss=-0.9549185
[302]dif=1e-05; Loss=-0.9549185
[303]dif=1e-05; Loss=-0.9549185
[304]dif=1e-05; Loss=-0.9549185
[305]dif=1e-05; Loss=-0.9549185
[306]dif=1e-05; Loss=-0.9549185
[307]dif=1e-05; Loss=-0.9549185
[308]dif=1e-05; Loss=-0.9549185
[309]dif=1e-05; Loss=-0.9549185
[310]dif=1e-05; Loss=-0.9549185
[311]dif=1e-05; Loss=-0.9549185
[312]dif=1e-05; Loss=-0.9549185
[313]dif=1e-05; Loss=-0.9549185
[314]dif=1e-05; Loss=-0.9549185
[315]dif=1e-05; Loss=-0.9549185
[316]dif=1e-05; Loss=-0.9549185
[317]dif=1e-05; Loss=-0.9549185
[318]dif=1e-05; Loss=-0.9549185
[319]dif=1e-05; Loss=-0.9549185
[320]dif=1e-05; Loss=-0.9549185
[321]dif=1e-05; Loss=-0.9549185
[322]dif=1e-05; Loss=-0.9549185
[323]dif=1e-05; Loss=-0.9549185
[324]dif=1e-05; Loss=-0.9549185
[325]dif=1e-05; Loss=-0.9549185
[326]dif=1e-05; Loss=-0.9549185
[327]dif=1e-05; Loss=-0.9549185
[328]dif=0; Loss=-0.9549185
[329]dif=0; Loss=-0.9549185
[330]dif=0; Loss=-0.9549185
[331]dif=0; Loss=-0.9549185
[332]dif=0; Loss=-0.9549185
[333]dif=0; Loss=-0.9549185
[334]dif=0; Loss=-0.9549185
[335]dif=0; Loss=-0.9549185
[336]dif=0; Loss=-0.9549185
[337]dif=0; Loss=-0.9549185
[338]dif=0; Loss=-0.9549185
[339]dif=0; Loss=-0.9549185
[340]dif=0; Loss=-0.9549185
[341]dif=0; Loss=-0.9549185
[342]dif=0; Loss=-0.9549185
[343]dif=0; Loss=-0.9549185
[344]dif=0; Loss=-0.9549185
[345]dif=0; Loss=-0.9549185
[346]dif=0; Loss=-0.9549185
[347]dif=0; Loss=-0.9549185
[348]dif=0; Loss=-0.9549185
[349]dif=0; Loss=-0.9549185
[350]dif=0; Loss=-0.9549185
[351]dif=0; Loss=-0.9549185
[352]dif=0; Loss=-0.9549185
[353]dif=0; Loss=-0.9549185
[354]dif=0; Loss=-0.9549185
[355]dif=0; Loss=-0.9549185
[356]dif=0; Loss=-0.9549185
[357]dif=0; Loss=-0.9549185
[358]dif=0; Loss=-0.9549185
[359]dif=0; Loss=-0.9549185
[360]dif=0; Loss=-0.9549185
[361]dif=0; Loss=-0.9549185
[362]dif=0; Loss=-0.9549185
[363]dif=0; Loss=-0.9549185
[364]dif=0; Loss=-0.9549185
[365]dif=0; Loss=-0.9549185
[366]dif=0; Loss=-0.9549185
[367]dif=0; Loss=-0.9549185
[368]dif=0; Loss=-0.9549185
[369]dif=0; Loss=-0.9549185
[370]dif=0; Loss=-0.9549185
[371]dif=0; Loss=-0.9549185
[372]dif=0; Loss=-0.9549185
[373]dif=0; Loss=-0.9549185
[374]dif=0; Loss=-0.9549185
[375]dif=0; Loss=-0.9549185
[376]dif=0; Loss=-0.9549185
[377]dif=0; Loss=-0.9549185
[378]dif=0; Loss=-0.9549185
[379]dif=0; Loss=-0.9549185
[380]dif=0; Loss=-0.9549185
[381]dif=0; Loss=-0.9549185
[382]dif=0; Loss=-0.9549185
[383]dif=0; Loss=-0.9549185
[384]dif=0; Loss=-0.9549185
[385]dif=0; Loss=-0.9549185
[386]dif=0; Loss=-0.9549185
[387]dif=0; Loss=-0.9549185
[388]dif=0; Loss=-0.9549185
[389]dif=0; Loss=-0.9549185
[390]dif=0; Loss=-0.9549185
[391]dif=0; Loss=-0.9549185
[392]dif=0; Loss=-0.9549185
[393]dif=0; Loss=-0.9549185
[394]dif=0; Loss=-0.9549185
[395]dif=0; Loss=-0.9549185
12
[fold=1]i=1j=1
[2]dif=0.48287; Loss=-0.4086735
[3]dif=0.22361; Loss=-0.6855453
[4]dif=0.1653; Loss=-0.7619896
[5]dif=0.11707; Loss=-0.7866548
[6]dif=0.09012; Loss=-0.7983629
[7]dif=0.07449; Loss=-0.8058964
[8]dif=0.0645; Loss=-0.8116371
[9]dif=0.05814; Loss=-0.8161861
[10]dif=0.05248; Loss=-0.8196965
[11]dif=0.04742; Loss=-0.8223446
[12]dif=0.04299; Loss=-0.8242984
[13]dif=0.03859; Loss=-0.8257265
[14]dif=0.03453; Loss=-0.8267686
[15]dif=0.03069; Loss=-0.8275154
[16]dif=0.02703; Loss=-0.8280466
[17]dif=0.02377; Loss=-0.8284215
[18]dif=0.02072; Loss=-0.8286776
[19]dif=0.01791; Loss=-0.8288373
[20]dif=0.01551; Loss=-0.8289402
[21]dif=0.01347; Loss=-0.829008
[22]dif=0.01173; Loss=-0.8290539
[23]dif=0.0103; Loss=-0.8290846
[24]dif=0.00906; Loss=-0.8291054
[25]dif=0.00804; Loss=-0.8291184
[26]dif=0.00716; Loss=-0.8291291
[27]dif=0.00642; Loss=-0.8291384
[28]dif=0.00582; Loss=-0.8291476
[29]dif=0.00532; Loss=-0.8291571
[30]dif=0.00494; Loss=-0.8291669
[31]dif=0.00463; Loss=-0.8291772
[32]dif=0.00441; Loss=-0.8291877
[33]dif=0.00423; Loss=-0.8291981
[34]dif=0.00406; Loss=-0.8292081
[35]dif=0.0039; Loss=-0.8292175
[36]dif=0.00375; Loss=-0.8292261
[37]dif=0.00361; Loss=-0.8292336
[38]dif=0.00348; Loss=-0.82924
[39]dif=0.00333; Loss=-0.8292454
[40]dif=0.00316; Loss=-0.8292495
[41]dif=0.00299; Loss=-0.829253
[42]dif=0.00281; Loss=-0.8292558
[43]dif=0.00261; Loss=-0.829258
[44]dif=0.00245; Loss=-0.8292598
[45]dif=0.00227; Loss=-0.8292613
[46]dif=0.00212; Loss=-0.8292626
[47]dif=0.002; Loss=-0.8292637
[48]dif=0.0019; Loss=-0.8292647
[49]dif=0.00182; Loss=-0.8292656
[50]dif=0.00173; Loss=-0.8292664
[51]dif=0.00165; Loss=-0.8292671
[52]dif=0.00157; Loss=-0.8292677
[53]dif=0.0015; Loss=-0.8292683
[54]dif=0.00144; Loss=-0.8292689
[55]dif=0.00137; Loss=-0.8292694
[56]dif=0.00131; Loss=-0.8292699
[57]dif=0.00125; Loss=-0.8292703
[58]dif=0.0012; Loss=-0.8292708
[59]dif=0.00115; Loss=-0.8292713
[60]dif=0.00111; Loss=-0.8292717
[61]dif=0.00106; Loss=-0.8292722
[62]dif=0.00103; Loss=-0.8292726
[63]dif=0.001; Loss=-0.829273
[64]dif=0.00096; Loss=-0.8292733
[65]dif=0.00094; Loss=-0.8292737
[66]dif=9e-04; Loss=-0.8292739
[67]dif=0.00086; Loss=-0.8292742
[68]dif=0.00082; Loss=-0.8292743
[69]dif=0.00078; Loss=-0.8292745
[70]dif=0.00074; Loss=-0.8292746
[71]dif=7e-04; Loss=-0.8292747
[72]dif=0.00067; Loss=-0.8292747
[73]dif=0.00064; Loss=-0.8292748
[74]dif=0.00062; Loss=-0.8292749
[75]dif=6e-04; Loss=-0.8292749
[76]dif=0.00058; Loss=-0.829275
[77]dif=0.00057; Loss=-0.8292751
[78]dif=0.00055; Loss=-0.8292752
[79]dif=0.00054; Loss=-0.8292753
[80]dif=0.00053; Loss=-0.8292754
[81]dif=0.00051; Loss=-0.8292755
[82]dif=5e-04; Loss=-0.8292756
[83]dif=0.00049; Loss=-0.8292757
[84]dif=0.00048; Loss=-0.8292757
[85]dif=0.00046; Loss=-0.8292758
[86]dif=0.00045; Loss=-0.8292758
[87]dif=0.00043; Loss=-0.8292759
[88]dif=0.00041; Loss=-0.8292759
[89]dif=4e-04; Loss=-0.829276
[90]dif=0.00038; Loss=-0.829276
[91]dif=0.00037; Loss=-0.829276
[92]dif=0.00036; Loss=-0.8292761
[93]dif=0.00035; Loss=-0.8292761
[94]dif=0.00034; Loss=-0.8292761
[95]dif=0.00032; Loss=-0.8292761
[96]dif=0.00032; Loss=-0.8292761
[97]dif=0.00031; Loss=-0.8292762
[98]dif=3e-04; Loss=-0.8292762
[99]dif=0.00029; Loss=-0.8292762
[100]dif=0.00028; Loss=-0.8292762
[101]dif=0.00028; Loss=-0.8292762
[102]dif=0.00027; Loss=-0.8292762
[103]dif=0.00027; Loss=-0.8292763
[104]dif=0.00026; Loss=-0.8292763
[105]dif=0.00025; Loss=-0.8292763
[106]dif=0.00024; Loss=-0.8292763
[107]dif=0.00023; Loss=-0.8292763
[108]dif=0.00022; Loss=-0.8292763
[109]dif=0.00022; Loss=-0.8292763
[110]dif=0.00021; Loss=-0.8292764
[111]dif=0.00021; Loss=-0.8292764
[112]dif=2e-04; Loss=-0.8292764
[113]dif=2e-04; Loss=-0.8292764
[114]dif=2e-04; Loss=-0.8292764
[115]dif=0.00019; Loss=-0.8292764
[116]dif=0.00019; Loss=-0.8292764
[117]dif=0.00019; Loss=-0.8292764
[118]dif=0.00018; Loss=-0.8292764
[119]dif=0.00018; Loss=-0.8292765
[120]dif=0.00017; Loss=-0.8292765
[121]dif=0.00017; Loss=-0.8292765
[122]dif=0.00016; Loss=-0.8292765
[123]dif=0.00016; Loss=-0.8292765
[124]dif=0.00015; Loss=-0.8292765
[125]dif=0.00015; Loss=-0.8292765
[126]dif=0.00014; Loss=-0.8292765
[127]dif=0.00013; Loss=-0.8292765
[128]dif=0.00013; Loss=-0.8292765
[129]dif=0.00012; Loss=-0.8292765
[130]dif=0.00012; Loss=-0.8292765
[131]dif=0.00012; Loss=-0.8292765
[132]dif=0.00012; Loss=-0.8292765
[133]dif=0.00011; Loss=-0.8292765
[134]dif=0.00011; Loss=-0.8292765
[135]dif=0.00011; Loss=-0.8292765
[136]dif=0.00011; Loss=-0.8292765
[137]dif=0.00011; Loss=-0.8292765
[138]dif=0.00011; Loss=-0.8292765
[139]dif=0.00011; Loss=-0.8292765
[140]dif=0.00011; Loss=-0.8292765
[141]dif=0.00011; Loss=-0.8292765
[142]dif=1e-04; Loss=-0.8292765
[143]dif=1e-04; Loss=-0.8292765
[144]dif=1e-04; Loss=-0.8292765
[145]dif=1e-04; Loss=-0.8292765
[146]dif=9e-05; Loss=-0.8292765
[147]dif=9e-05; Loss=-0.8292765
[148]dif=8e-05; Loss=-0.8292765
[149]dif=8e-05; Loss=-0.8292765
[150]dif=8e-05; Loss=-0.8292765
[151]dif=7e-05; Loss=-0.8292765
[152]dif=7e-05; Loss=-0.8292765
[153]dif=7e-05; Loss=-0.8292765
[154]dif=7e-05; Loss=-0.8292765
[155]dif=6e-05; Loss=-0.8292765
[156]dif=6e-05; Loss=-0.8292765
[157]dif=6e-05; Loss=-0.8292765
[158]dif=6e-05; Loss=-0.8292765
[159]dif=6e-05; Loss=-0.8292765
[160]dif=6e-05; Loss=-0.8292765
[161]dif=6e-05; Loss=-0.8292765
[162]dif=6e-05; Loss=-0.8292765
[163]dif=6e-05; Loss=-0.8292765
[164]dif=6e-05; Loss=-0.8292765
[165]dif=6e-05; Loss=-0.8292765
[166]dif=6e-05; Loss=-0.8292765
[167]dif=6e-05; Loss=-0.8292765
[168]dif=6e-05; Loss=-0.8292766
[169]dif=6e-05; Loss=-0.8292766
[170]dif=5e-05; Loss=-0.8292765
[171]dif=5e-05; Loss=-0.8292765
[172]dif=5e-05; Loss=-0.8292765
[173]dif=5e-05; Loss=-0.8292765
[174]dif=5e-05; Loss=-0.8292765
[175]dif=4e-05; Loss=-0.8292765
[176]dif=4e-05; Loss=-0.8292765
[177]dif=4e-05; Loss=-0.8292765
[178]dif=4e-05; Loss=-0.8292765
[179]dif=4e-05; Loss=-0.8292765
[180]dif=4e-05; Loss=-0.8292765
[181]dif=4e-05; Loss=-0.8292765
[182]dif=4e-05; Loss=-0.8292766
[183]dif=4e-05; Loss=-0.8292766
[184]dif=4e-05; Loss=-0.8292766
[185]dif=4e-05; Loss=-0.8292766
[186]dif=4e-05; Loss=-0.8292766
[187]dif=4e-05; Loss=-0.8292766
[188]dif=4e-05; Loss=-0.8292766
[189]dif=4e-05; Loss=-0.8292766
[190]dif=4e-05; Loss=-0.8292766
[191]dif=4e-05; Loss=-0.8292766
[192]dif=4e-05; Loss=-0.8292766
[193]dif=3e-05; Loss=-0.8292766
[194]dif=3e-05; Loss=-0.8292766
[195]dif=3e-05; Loss=-0.8292766
[196]dif=3e-05; Loss=-0.8292766
[197]dif=3e-05; Loss=-0.8292766
[198]dif=3e-05; Loss=-0.8292766
[199]dif=3e-05; Loss=-0.8292766
[200]dif=3e-05; Loss=-0.8292766
[201]dif=3e-05; Loss=-0.8292766
[202]dif=3e-05; Loss=-0.8292766
[203]dif=3e-05; Loss=-0.8292766
[204]dif=3e-05; Loss=-0.8292766
[205]dif=3e-05; Loss=-0.8292766
[206]dif=2e-05; Loss=-0.8292766
[207]dif=2e-05; Loss=-0.8292766
[208]dif=2e-05; Loss=-0.8292766
[209]dif=2e-05; Loss=-0.8292766
[210]dif=2e-05; Loss=-0.8292766
[211]dif=2e-05; Loss=-0.8292766
[212]dif=2e-05; Loss=-0.8292766
[213]dif=2e-05; Loss=-0.8292766
[214]dif=2e-05; Loss=-0.8292766
[215]dif=2e-05; Loss=-0.8292766
[216]dif=2e-05; Loss=-0.8292766
[217]dif=2e-05; Loss=-0.8292766
[218]dif=2e-05; Loss=-0.8292766
[219]dif=2e-05; Loss=-0.8292766
[220]dif=2e-05; Loss=-0.8292766
[221]dif=2e-05; Loss=-0.8292766
[222]dif=2e-05; Loss=-0.8292766
[223]dif=2e-05; Loss=-0.8292766
[224]dif=2e-05; Loss=-0.8292766
[225]dif=2e-05; Loss=-0.8292766
[226]dif=2e-05; Loss=-0.8292766
[227]dif=2e-05; Loss=-0.8292766
[228]dif=2e-05; Loss=-0.8292766
[229]dif=2e-05; Loss=-0.8292766
[230]dif=2e-05; Loss=-0.8292766
[231]dif=2e-05; Loss=-0.8292766
[232]dif=2e-05; Loss=-0.8292766
[233]dif=2e-05; Loss=-0.8292766
[234]dif=2e-05; Loss=-0.8292766
[235]dif=2e-05; Loss=-0.8292766
[236]dif=2e-05; Loss=-0.8292766
[237]dif=2e-05; Loss=-0.8292766
[238]dif=2e-05; Loss=-0.8292766
[239]dif=2e-05; Loss=-0.8292766
[240]dif=2e-05; Loss=-0.8292766
[241]dif=2e-05; Loss=-0.8292766
[242]dif=2e-05; Loss=-0.8292766
[243]dif=1e-05; Loss=-0.8292766
[244]dif=1e-05; Loss=-0.8292766
[245]dif=1e-05; Loss=-0.8292766
[246]dif=1e-05; Loss=-0.8292766
[247]dif=1e-05; Loss=-0.8292766
[248]dif=1e-05; Loss=-0.8292766
[249]dif=1e-05; Loss=-0.8292766
[250]dif=1e-05; Loss=-0.8292766
[251]dif=1e-05; Loss=-0.8292766
[252]dif=1e-05; Loss=-0.8292766
[253]dif=1e-05; Loss=-0.8292766
[254]dif=1e-05; Loss=-0.8292766
[255]dif=1e-05; Loss=-0.8292766
[256]dif=1e-05; Loss=-0.8292766
[257]dif=1e-05; Loss=-0.8292766
[258]dif=1e-05; Loss=-0.8292766
[259]dif=1e-05; Loss=-0.8292766
[260]dif=1e-05; Loss=-0.8292766
[261]dif=1e-05; Loss=-0.8292766
[262]dif=1e-05; Loss=-0.8292766
[263]dif=1e-05; Loss=-0.8292766
[264]dif=1e-05; Loss=-0.8292766
[265]dif=1e-05; Loss=-0.8292766
[266]dif=1e-05; Loss=-0.8292766
[267]dif=1e-05; Loss=-0.8292766
[268]dif=1e-05; Loss=-0.8292766
[269]dif=1e-05; Loss=-0.8292766
[270]dif=1e-05; Loss=-0.8292766
[271]dif=1e-05; Loss=-0.8292766
[272]dif=1e-05; Loss=-0.8292766
[273]dif=1e-05; Loss=-0.8292766
[274]dif=1e-05; Loss=-0.8292766
[275]dif=1e-05; Loss=-0.8292766
[276]dif=1e-05; Loss=-0.8292766
[277]dif=1e-05; Loss=-0.8292766
[278]dif=1e-05; Loss=-0.8292766
[279]dif=1e-05; Loss=-0.8292766
[280]dif=1e-05; Loss=-0.8292766
[281]dif=1e-05; Loss=-0.8292766
[282]dif=1e-05; Loss=-0.8292766
[283]dif=1e-05; Loss=-0.8292766
[284]dif=1e-05; Loss=-0.8292766
[285]dif=1e-05; Loss=-0.8292766
[286]dif=1e-05; Loss=-0.8292766
[287]dif=1e-05; Loss=-0.8292766
[288]dif=1e-05; Loss=-0.8292766
[289]dif=1e-05; Loss=-0.8292766
[290]dif=1e-05; Loss=-0.8292766
[291]dif=1e-05; Loss=-0.8292766
[292]dif=0; Loss=-0.8292766
[293]dif=0; Loss=-0.8292766
[294]dif=0; Loss=-0.8292766
[295]dif=0; Loss=-0.8292766
[296]dif=0; Loss=-0.8292766
[297]dif=0; Loss=-0.8292766
[298]dif=0; Loss=-0.8292766
[299]dif=1e-05; Loss=-0.8292766
[300]dif=1e-05; Loss=-0.8292766
[301]dif=1e-05; Loss=-0.8292766
[302]dif=1e-05; Loss=-0.8292766
[303]dif=1e-05; Loss=-0.8292766
[304]dif=1e-05; Loss=-0.8292766
[305]dif=1e-05; Loss=-0.8292766
[306]dif=1e-05; Loss=-0.8292766
[307]dif=1e-05; Loss=-0.8292766
[308]dif=1e-05; Loss=-0.8292766
[309]dif=1e-05; Loss=-0.8292766
[310]dif=1e-05; Loss=-0.8292766
[311]dif=1e-05; Loss=-0.8292766
[312]dif=0; Loss=-0.8292766
[313]dif=0; Loss=-0.8292766
[314]dif=0; Loss=-0.8292766
[315]dif=0; Loss=-0.8292766
[316]dif=0; Loss=-0.8292766
[317]dif=0; Loss=-0.8292766
[318]dif=0; Loss=-0.8292766
[319]dif=0; Loss=-0.8292766
[320]dif=0; Loss=-0.8292766
[321]dif=0; Loss=-0.8292766
[322]dif=0; Loss=-0.8292766
[323]dif=0; Loss=-0.8292766
[324]dif=0; Loss=-0.8292766
[325]dif=0; Loss=-0.8292766
[326]dif=0; Loss=-0.8292766
[327]dif=0; Loss=-0.8292766
[328]dif=0; Loss=-0.8292766
[329]dif=0; Loss=-0.8292766
[330]dif=0; Loss=-0.8292766
[331]dif=0; Loss=-0.8292766
[332]dif=0; Loss=-0.8292766
[333]dif=0; Loss=-0.8292766
[334]dif=0; Loss=-0.8292766
[335]dif=0; Loss=-0.8292766
[336]dif=0; Loss=-0.8292766
[337]dif=0; Loss=-0.8292766
[338]dif=0; Loss=-0.8292766
[339]dif=0; Loss=-0.8292766
[340]dif=0; Loss=-0.8292766
[341]dif=0; Loss=-0.8292766
[342]dif=0; Loss=-0.8292766
[343]dif=0; Loss=-0.8292766
[344]dif=0; Loss=-0.8292766
[345]dif=0; Loss=-0.8292766
[346]dif=0; Loss=-0.8292766
[347]dif=0; Loss=-0.8292766
[348]dif=0; Loss=-0.8292766
[349]dif=0; Loss=-0.8292766
[350]dif=0; Loss=-0.8292766
[351]dif=0; Loss=-0.8292766
[352]dif=0; Loss=-0.8292766
[353]dif=0; Loss=-0.8292766
[354]dif=0; Loss=-0.8292766
[355]dif=0; Loss=-0.8292766
[356]dif=0; Loss=-0.8292766
[357]dif=0; Loss=-0.8292766
[358]dif=0; Loss=-0.8292766
[359]dif=0; Loss=-0.8292766
[360]dif=0; Loss=-0.8292766
[361]dif=0; Loss=-0.8292766
[362]dif=0; Loss=-0.8292766
[363]dif=0; Loss=-0.8292766
[364]dif=0; Loss=-0.8292766
[365]dif=0; Loss=-0.8292766
[366]dif=0; Loss=-0.8292766
[367]dif=0; Loss=-0.8292766
[368]dif=0; Loss=-0.8292766
[369]dif=0; Loss=-0.8292766
[370]dif=0; Loss=-0.8292766
[371]dif=0; Loss=-0.8292766
[372]dif=0; Loss=-0.8292766
12
[fold=1]i=1j=2
